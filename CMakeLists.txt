cmake_minimum_required(VERSION 3.0.0)
project(pm-qt VERSION 0.0.1)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)

if (CMAKE_BUILD_TYPE MATCHES Release)
    set(CMAKE_WIN32_EXECUTABLE ON)
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-O3")
    endif()
else()
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-Wall -Wextra -pedantic -ggdb -O0")
    endif()
endif()

find_package(Qt5 REQUIRED COMPONENTS Widgets)
find_package(SQLite3)

set(SOURCES src/pm-qt.cpp src/aes.c src/b64/encode.c src/b64/decode.c src/b64/buffer.c)

if (NOT DEFINED TESTS)
    add_executable(${PROJECT_NAME} src/main.cpp ${SOURCES})
    target_link_libraries(${PROJECT_NAME} Qt5::Widgets)
    target_link_libraries(${PROJECT_NAME} ${SQLite3_LIBRARIES})
else()
    add_executable(tests tests/test.cpp ${SOURCES})
    set_target_properties(tests PROPERTIES SUFFIX ".run")
    target_link_libraries(tests Qt5::Widgets)
    target_link_libraries(tests ${SQLite3_LIBRARIES})
endif()
